// 10. Обход дерева в ширину *
// Реализуйте функцию bfs, которая принимает в качестве аргумента объект, отражающий небинарное дерево(узел может иметь больше двух потомков) и возвращает массив узлов, соответствующий обходу в ширину. Обход осуществляется слева направо(по возрастанию индекса в массиве).

// Пример графа:
//             A 
//           /   \ 
//          B     C 
//         /  \   / \ 
//        D    E F   G

// Этот же граф в виде объекта:
// const graph = {
//     A: ['B', 'C'],
//     B: ['D', 'E'],
//     C: ['F', 'G'],
//     D: [],
//     E: [],
//     F: [],
//     G: [],
// };
// Ошибки, которые должны быть обработаны:

// Переданный аргумент не объект. Код ошибки INVALID_ARGUMENT.
// Примеры использования:

// bfs(graph) // ['A', 'B', 'С', 'D', 'E', 'F', 'G']
// bfs('{}') // ошибка с кодом INVALID_ARGUMENT
